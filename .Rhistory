soc_data <- read.csv("C:/Users/jy33/OneDrive/Desktop/Sociability index Nov 2020.csv",
stringsAsFactors = TRUE)
View(soc_data)
soc_data$Time <- as.factor(soc_data$Time)
ggplot(data = soc_data, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot()
ggplot(data = soc_data, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot() +
theme_classic() + scale_fill_brewer(palette = "Pastel1")
soc_data <- soc_data %>%
filter(s == "Both") %>%
droplevels()
soc_data <- soc_data %>%
filter(s == "Both") %>%
droplevels()
soc_data <- soc_data %>%
filter(s == "Both") %>%
droplevels("Both")
soc_data <- soc_data %>%
filter(Sex == "Both") %>%
droplevels()
ggplot(data = soc_data, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot() +
theme_classic() + scale_fill_brewer(palette = "Pastel1")
soc_data <- soc_data %>%
filter(Sex == c("Males", "Females")) %>%
droplevels()
soc_data <- soc_data %>%
filter(Sex == c("Males", "Females")) %>%
droplevels()
ggplot(data = soc_data, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot() +
theme_classic() + scale_fill_brewer(palette = "Pastel1")
soc_data <- read.csv("C:/Users/jy33/OneDrive/Desktop/Sociability index Nov 2020.csv",
stringsAsFactors = TRUE)
View(soc_data)
soc_data <- soc_data %>%
filter(Sex == c("Male", "Female")) %>%
droplevels()
ggplot(data = soc_data, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot() +
theme_classic() + scale_fill_brewer(palette = "Pastel1")
soc_data$Time <- as.factor(soc_data$Time)
ggplot(data = soc_data, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot() +
theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot() +
labs(x = "Time", y = "Sociability index")
ggplot(data = soc_data, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") +
theme_classic() + scale_fill_brewer(palette = "Pastel1")
soc_data_sex <- soc_data %>%
filter(Sex == c("Male", "Female")) %>%
droplevels()
ggplot(data = soc_data, aes(x = "Time", y = "Soc.index")) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
soc_data <- read.csv("C:/Users/jy33/OneDrive/Desktop/Sociability index Nov 2020.csv",
stringsAsFactors = TRUE)
soc_data$Time <- as.factor(soc_data$Time)
soc_data <- read.csv("C:/Users/jy33/OneDrive/Desktop/Sociability index Nov 2020.csv",
stringsAsFactors = TRUE)
soc_data$Time <- as.factor(soc_data$Time)
ggplot(data = soc_data, aes(x = "Time", y = "Soc.index")) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
soc_data_sex <- soc_data %>%
filter(Sex == c("Male", "Female")) %>%
droplevels()
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
soc_data$Time <- as.factor(soc_data$Time)
ggplot(data = soc_data, aes(x = "Time", y = "Soc.index")) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
soc_data_both <- soc_data %>%
filter(Sex == "Both") %>%
droplevels()
ggplot(data = soc_data_both, aes(x = "Time", y = "Soc.index")) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_both, aes(x = "Time", y = "Soc.index")) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
View(soc_data_both)
ggplot(data = soc_data_both, aes(x = "Time", y = "Soc.index")) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
soc_data_both$Time <- as.factor(soc_data_both$Time)
ggplot(data = soc_data_both, aes(x = "Time", y = "Soc.index")) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
soc_data_both$Time
ggplot(data = soc_data_both, aes(x = "Time", y = "Soc.index")) + geom_boxplot()
ggplot(data = soc_data_both, aes(x = Time, y = Soc.index)) + geom_boxplot()
ggplot(data = soc_data_both, aes(x = Time, y = Soc.index)) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_bar() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_bar() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
geom_boxplot
ggplot(data = soc_data_both, aes(x = Time, y = Soc.index)) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex))  +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot()
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_bar() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_bar(stat = "count") +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_bar(stat = "count") +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_both, aes(x = Time, y = Soc.index)) + geom_bar() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_both, aes(x = Time, y = Soc.index)) + geom_bar() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_both, aes(y = Soc.index)) + geom_bar() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_both, aes(y = Soc.index)) + geom_bar() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_both, aes(Soc.index)) + geom_bar() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_both, aes(x = Time, y = Soc.index)) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_both, aes(x = Time, y = Soc.index)) + geom_bar(stat = "summary") +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_both, aes(x = Time, y = Soc.index)) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_bar(stat = "summary") +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_bar(stat = "summary") +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_bar(stat = "summary", position = "dodge") +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot()
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) + geom_boxplot() +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
ggplot(data = soc_data_sex, aes(y = Soc.index, x = Time, fill = Sex)) +
geom_bar(stat = "summary", position = "dodge") +
labs(x = "Time", y = "Sociability index") + theme_classic() + scale_fill_brewer(palette = "Pastel1")
soc.sex.model <- lmer(Soc.index ~ 1 + Sex*Time+ (1|Day), data = soc_data_sex, REML = T)
summary(soc.sex.model)
anova(soc.sex.model)
aov(soc.sex.model)
summary(soc.sex.model)
soc.sex.model <- lmer(Soc.index ~ 1 + Sex + Time+ (1|Day), data = soc_data_sex, REML = T)
summary(soc.sex.model)
soc.sex.model <- lmer(Soc.index ~ 1 + Sex*Time+ (1|Day), data = soc_data_sex, REML = T)
summary(soc.sex.model)
anova(soc.sex.model)
---
title: "Bedbug Ideal Free Distribution"
author: "Janice Yan"
date: "08/06/2020"
output:
word_document: default
html_document: default
pdf_document: default
---
```{r Packages, echo=TRUE, message=FALSE, warning=FALSE, paged.print=FALSE}
library(readxl)
library(tidyverse)
library(dbplyr)
library(car)
library(ggplot2)
library(lme4)
library(lmerTest)
```
#Importing and cleaning data
```{r}
agg.data2 <- read.csv("C:/Users/jy33/OneDrive/Desktop/Bedbugs/Data/Agg.csv", stringsAsFactors = TRUE)
lone.data2 <- read.csv("C:/Users/jy33/OneDrive/Desktop/Bedbugs/Data/Lone.csv", stringsAsFactors = TRUE)
```
```{r message=FALSE, warning=FALSE}
agg.data.harb <- agg.data2 %>%
filter(Treatment == "H")
agg.data.none <- agg.data2 %>%
filter(Treatment == "N")
median(agg.data.harb$Prop.F)
median(agg.data.none$Prop.F)
mean(agg.data.harb$Prop.F)
mean(agg.data.none$Prop.F)
```
#Effect of sex and treatment on prop of lone individuals
```{r}
lone.model <- lmer(prop.lone ~ Sex*Treatment + (1|Day) + (1|Group.ID), data = lone.data2)
summary(lone.model)
```
#Plot for lone males vs. females
```{r}
ggplot(lone.data2, aes(x = Treatment, y = prop.lone, fill = Sex)) + geom_boxplot() +
labs(y = "Proprotion of lone individuals", x = "Treatment") + theme_classic() +
scale_fill_brewer(palette = "Pastel1")
```
#Testing sex ratio of aggregations
```{r}
t.test(agg.data2$Prop.F, agg.data2$Expected.F, alternative = "greater")
```
```{r}
ggplot() +
geom_histogram(data = agg.data2, aes(x = Expected.F, fill = "r"), alpha = 0.35) +
geom_histogram(data = agg.data2, aes(x = Prop.F, fill = "b"), alpha = 0.5) +
scale_fill_manual(name ="", values = c("r" = "grey45", "b" = "grey7"),
labels=c("r" = "Expected", "b" = "Observed")) +
coord_cartesian(ylim = c(0, 80)) +
labs(x = "Proportion of aggregation composed of females", y = "Count") + theme_classic(base_size = 18)
```
#Testing aggregation composition
```{r}
agg.model <- lmer(Females ~ 1 + Males*Treatment + (1|Block) + (1|Group.ID) +
(1|Day) + (1|Arena), data = agg.data2, REML = T)
summary(agg.model)
```
```{r}
ggplot(agg.data2, aes(x = Males, y = Females, color = Treatment)) + geom_point() + geom_smooth(method = "lm") +
theme_classic() + scale_color_manual(values=c("#56B4E9", "#E69F00"))
```
bank_full <- read_csv("C:/Users/jy33/OneDrive/Desktop/bank-full.csv", stringsAsFactors = T)
bank_full <- read_csv("C:/Users/jy33/OneDrive/Desktop/bank-full.csv", stringsAsFactors = T)
View(bank_full)
bank_full <- read.csv("C:/Users/jy33/OneDrive/Desktop/bank-full.csv", stringsAsFactors = T)
bank.data <- read.csv("C:/Users/jy33/OneDrive/Desktop/bank-full.csv", stringsAsFactors = T)
bank.data <- read.csv("C:/Users/jy33/OneDrive/Desktop/bank-full.csv", stringsAsFactors = T)
View(bank.data)
bank.data <- read.csv("C:/Users/jy33/OneDrive/Desktop/bank-full.csv", stringsAsFactors = T, header = 0)
bank.data <- read.csv("C:/Users/jy33/OneDrive/Desktop/bank-full.csv", stringsAsFactors = T, header = 1)
bank.data <- read.csv("C:/Users/jy33/OneDrive/Desktop/bank-full.csv", stringsAsFactors = T, header = 1)
bank.data <- read.csv("C:/Users/jy33/OneDrive/Desktop/bank-full.csv", stringsAsFactors = T, sep = ";")
View(bank.data)
library(dplyr)
bank.data  <- bank.data %>%
mutate(y = ifelse(y == "No", 0, 1))
View(bank.data)
bank.data <- read.csv("C:/Users/jy33/OneDrive/Desktop/bank-full.csv", stringsAsFactors = T, sep = ";")
bank.data  <- bank.data %>%
mutate(y = ifelse(y == "no", 0, 1))
View(bank.data)
bank.model <- lmer(data = bank.data, y ~ age + job + marital)
library(readxl)
library(tidyverse)
library(dbplyr)
library(car)
library(ggplot2)
library(lme4)
library(lmerTest)
bank.data <- read.csv("C:/Users/jy33/OneDrive/Desktop/bank-full.csv", stringsAsFactors = T, sep = ";")
bank.data  <- bank.data %>%
mutate(y = ifelse(y == "no", 0, 1))
bank.model <- lmer(data = bank.data, y ~ age + job + marital)
bank.model <- lmer(data = bank.data, y ~ age + job + marital)
bank.model <- aov(data = bank.data, y ~ age + job + marital)
summary(bank.model)
bank.model <- aov(data = bank.data, y ~ age + job + marital + education + default + balance + housing + loan)
summary(bank.model)
ggplot(bank.data, aes(x = job, y = y, fill = age)) + geom_boxplot() +
labs(y = "Proprotion of lone individuals", x = "Treatment") + theme_classic() +
scale_fill_brewer(palette = "Pastel1")
ggplot(bank.data, aes(x = education, y = y, fill = age)) + geom_boxplot() +
labs(y = "Proprotion of lone individuals", x = "Treatment") + theme_classic() +
scale_fill_brewer(palette = "Pastel1")
ggplot(bank.data, aes(x = education, y = y)) + geom_boxplot() +
labs(y = "Proprotion of lone individuals", x = "Treatment") + theme_classic() +
scale_fill_brewer(palette = "Pastel1")
ggplot(bank.data, aes(x = education, y = y)) + geom_boxplot() +
labs(y = "y", x = "Treatment") + theme_classic() +
scale_fill_brewer(palette = "Pastel1")
ggplot(bank.data, aes(x = education, y = y)) + geom_boxplot() +
labs(y = "y", x = "Education") + theme_classic() +
scale_fill_brewer(palette = "Pastel1")
ggplot(bank.data, aes(x = housing, y = y)) + geom_boxplot() +
labs(y = "y", x = "Education") + theme_classic() +
scale_fill_brewer(palette = "Pastel1")
summary(bank.model)
bank.model <- lmer(data = bank.data, y ~ age + job + marital + education + default + balance + housing + loan + (1|day))
summary(bank.model)
ggplot(data = bank.data, aes(x = education, y = y)) + geom_bar(stat = "identity")
ggplot(data = bank.data, aes(x = education, y = y, color = age)) + geom_bar(stat = "identity")
ggplot(data = bank.data, aes(x = education, y = y, color = housing)) + geom_bar(stat = "identity")
ggplot(data = bank.data, aes(x = education, y = y, fill = housing)) + geom_bar(stat = "identity")
ggplot(data = bank.data, aes(x = education, y = y, fill = housing)) + geom_bar(stat = "identity", position = position_dodge())
ggplot(data = bank.data, aes(x = education, y = y, fill = marital)) + geom_bar(stat = "identity", position = position_dodge())
ggplot(data = bank.data, aes(x = education, y = y)) +
geom_bar(stat = "identity", position = position_dodge())
ggplot(data = bank.data, aes(x = education, y = y)) +
geom_bar(stat = "identity")
ggplot(data = bank.data, aes(x = education, y = y, fill = marital)) + geom_bar(stat = "identity")
bank.model <- lmer(data = bank.data, y ~ age + job + marital + education + default + balance + housing + loan + (1|day))
summary(bank.model)
ggplot(data = bank.data, aes(x= job, y = y)) + geom_bar()
ggplot(data = bank.data, aes(x= job, y = y)) + geom_bar()
ggplot(data = bank.data, aes(x= job, y = y)) + geom_bar(stat = "identity")
ggplot(data = bank.data, aes(x= job, y = mean(y))) + geom_bar(stat = "identity")
ggplot(data = bank.data, aes(x= job, y = mean(y))) + geom_bar(stat = "identity")
summary(bank.model)
bank.model <- lmer(data = bank.data, y ~ job(1|day))
bank.model <- lmer(data = bank.data, y ~ job + (1|day))
summary(bank.model)
bank.model <- lm(data = bank.data, y ~ job + (1|day))
summary(bank.model)
bank.model <- lm(data = bank.data, y ~ job)
summary(bank.model)
bank.model <- aov(data = bank.data, y ~ job)
summary(bank.model)
bank.model <- aov(data = bank.data, y ~ job + marital + education + default + balance)
summary(bank.model)
bank.model <- aov(data = bank.data, y ~ job + marital + education + default + balance + housing + loan + contact +
month)
summary(bank.model)
2+2
7+3*9
7+(3*9)
x <- 23
x
print(x)
x <- 1
x
32/4*4
4*4
32/4
8*4
(32/4)*4
x <- 23
print(x)
x + 17
print x
print(x)
y <- x + 17
y
ls()
st(x)
str(x)
num <- 3
str(num)
char <- "Hello, class?"
str(char)
logic <- TRUE
str(logic)
words <- c("Mary", "had", "a", "little", "lamb")
str(words)
v <- 1:5
v
str(v)
v <- 1:5
w <- c(0, 1, 1, 2, 4)
v + w
2*w
test.vector <- 1:3
v*test.vector
v*test.vector
L <- list(1:3, "Apple tree", TRUE)
str(L)
str(L[[1]])
str(L[1])
LL <- list(L, c(2, 7, 9))
str(LL)
str(LL[1])
mean(c(2, 5, 11))
x <- 1:10
m_x <- mean(1:10)
m_x <- mean(x)
print(m_x)
x <- (1:10)^2
x
mean(x)
mean(x, trim = 0.1)
mean(x, trim <- 0.1)
data
v <- 1:10
for (x in v)   {
print(x^2)
}
for (x in v) {}
for (x in v)
{if(x >= 4){print(x^2)}}
return(x)
return(mean(x))
return(mean)
mean(2+2)
x <- 2 + 5
print(x)
y <- 3
mean(x, y)
x <- 1:5
mean(x)
if(1>0) {}
if(1 > 0) {
return(2)
}
return(mean(1:5))
help(return)
mean(x)
return(3)
if(1 > 0) {
return 2
}
return(x)
?return
R.version.string
R.version.string
update.packages(ask = FALSE, checkBuilt = TRUE)
x <- (1:10) ^ 2
mean(x)
#dataframes: lists of vectors
dd <- data.frame(a = 1:3),
b=c("hello", "goodbye", "maybe")
dd <- data.frame(a = 1:3),
b=c("hello", "goodbye", "maybe")
dd <- data.frame(a = 1:3),
b=c("hello", "goodbye", "maybe"))
dd <- data.frame((a = 1:3),
b=c("hello", "goodbye", "maybe"))
print(dd)
dd
dd <- data.frame((a = 1:3),
b=c("robin", "sparrow", "sparrow"))
dd <- data.frame((a = 1:3),
b = c("robin", "sparrow", "sparrow"))
View(dd)
dd <- data.frame((a = c(1, 2, 3)),
b = c("robin", "sparrow", "sparrow"))
1 <- 2
x == 1
1 == 2
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
#dataframes: lists of vectors
dd <- data.frame((a = c(1, 2, 3)),
b = c("robin", "sparrow", "sparrow"))
#dataframes: lists of vectors
dd <- data.frame((a = c(1, 2, 3)),
b = c("robin", "sparrow", "sparrow"))
#dataframes: lists of vectors
dd <- data.frame((a = c(1, 2, 3)),
b = c("robin", "sparrow", "sparrow"))
source('~/.active-rstudio-document', echo=TRUE)
getwd()
setwd("~Desktop")
download.file(url="https://ndownloader.gifshare.com/files/2292169",
destfile = "data/newdata.csv")
setwd("C:\Users\jy33\OneDrive\Desktop\R")
setwd("C:\Users\jy33\OneDrive\Desktop\R")
setwd("c:\Users\jy33\OneDrive\Desktop\R")
setwd("~Users\jy33\OneDrive\Desktop\R")
setwd("~Users\jy33\OneDrive\Desktop\R")
getwd()
setwd("C:/Users/jy33/OneDrive/Desktop/R/QMEE")
setwd("C:/Users/jy33/OneDrive/Desktop/R/QMEE")
setwd("~Users/jy33/OneDrive/Desktop/R/QMEE")
setwd("~/Users/jy33/OneDrive/Desktop/R/QMEE")
setwd("~/Users/jy33/OneDrive/Desktop/R/QMEE")
setwd("C://Users/jy33/OneDrive/Desktop/R/QMEE")
download.file(url="https://ndownloader.gifshare.com/files/2292169",
destfile = "data/newdata.csv")
dir.create("data")
download.file(url="https://ndownloader.gifshare.com/files/2292169",
destfile = "data/portal_data_joined.csv")
download.file(url="https://ndownloader.gifshare.com/files/2292169",
destfile = "data/portal_data_joined.csv")
download.file(url="https://ndownloader.figshare.com/files/2292169",
destfile = "data/portal_data_joined.csv")
download.file(url="https://ndownloader.figshare.com/files/2292169",
destfile = "data/portal_data_joined.csv")
setwd("~/Users/jy33/OneDrive/Desktop/R/QMEE")
library(tidyverse)
surveys <- read_csv("data/portal_data_joined.csv")
head(surveys)
View(surveys)
download.file?
?download.file
help("download.file")
download.file(url="https://ndownloader.figshare.com/files/2292169",
destfile = "data/portal_data_join.csv") #naming the file
select(surveys, month, day, plot.id)
library(tidyverse)
getwd()
setwd("C://Users/jy33/OneDrive/Desktop/R/QMEE")
dir.create("data")
download.file(url="https://ndownloader.figshare.com/files/2292169",
destfile = "data/portal_data_joined.csv") #naming the downloaded file in the folder
surveys <- read_csv("data/portal_data_joined.csv")
select(surveys, month, day, plot.id)
select(surveys, month, day, plot_id)
names(surveys)
select(surveys, -genus)
selevt(surveys, record_id:plot_id)
select(surveys, record_id:plot_id)
filter(surveys, (month > 11 |month < 3) & genus == "Neotoma" & species == "albigula")
survey2 <- (surveys
%>% filter(month > 11)
%>% select(-day)
%>% mutate(weight = weight/1000)
)
survey2
survey2 <- (surveys
%>% filter(month > 11)
%>% select(-day)
%>% mutate(weight = weight/1000)
)
survey2 <- (surveys
%>% filter(month > 11)
%>% select(-day)
%>% mutate(weight = weight/1000)
%>% select(LW)
)
str(surveys)
survey2 <- (surveys
%>% filter(month > 11)
%>% select(-day)
%>% mutate(weight = weight/1000)
%>% select(LW)
)
## tidyverse VERBS: select, filter, mutate...
names(surveys) #look at all column names
https://github.com/janyan33/waffle.git
